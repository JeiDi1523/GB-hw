import UIKit

//1. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–π —Ç–∏–ø –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ¬´–æ—á–µ—Ä–µ–¥—å¬ª (queue) c –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–∂–µ–Ω–µ—Ä–∏–∫–æ–≤.
//2. –î–æ–±–∞–≤–∏—Ç—å –µ–º—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞, –ø–æ–ª–µ–∑–Ω—ã—Ö –¥–ª—è —ç—Ç–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ (–ø—Ä–∏–º–µ—Ä: filter –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤).
//3. * –î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π subscript, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å nil –≤ —Å–ª—É—á–∞–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∏–Ω–¥–µ–∫—Å—É.

//—Å–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â–µ –∏ –æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ

struct Queue<T> {
    var collection = [T]()
    
    mutating func push(_ element: T) {
        collection.append(element)
    }
    
    mutating func pop() -> T {
        return collection.removeLast()
    }
    
    mutating func sortCustom(rule: (T, T) -> Bool) {
        for _ in 0..<collection.count {
            for index in 0..<collection.count - 1 {
                if rule(collection[index], collection[index + 1]) {
                    let tmpValue = collection[index]
                    collection[index] = collection[index + 1]
                    collection[index + 1] = tmpValue
                }
            }
        }
    }
    
    subscript(index: Int) -> T? {
        if index >= 0 && index < collection.count {
            return collection[index]
        } else {
            return nil
        }
    }
}

var increase: (Int, Int) -> Bool = { (element1: Int, element2: Int) -> Bool in
    return element1 > element2
}

var decrease: (Int, Int) -> Bool = { (element1: Int, element2: Int) -> Bool in
    return element1 < element2
}

var collectionQueueInt = Queue<Int>()
for _ in 1...10 {
    collectionQueueInt.push(Int.random(in: 1...100))
}
collectionQueueInt.push(15)
collectionQueueInt.pop()
print(collectionQueueInt)
collectionQueueInt.sortCustom(rule: increase)
print(collectionQueueInt)
collectionQueueInt.sortCustom(rule: decrease)
print(collectionQueueInt)

var collectionQueueString = Queue<String>()
collectionQueueString.push("Apple")
collectionQueueString.push("Microsoft")
collectionQueueString.push("Google")
collectionQueueString.push("Facebook")
collectionQueueString.push("üë®üèª‚Äçüíª")
collectionQueueString.pop()
collectionQueueString[1]
print(collectionQueueString)
